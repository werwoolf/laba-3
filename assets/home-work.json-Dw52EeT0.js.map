{"version":3,"file":"home-work.json-Dw52EeT0.js","sources":["../../../node_modules/.zudoku/processed/home-work.json.js"],"sourcesContent":["const __refs = Array.from({ length: 44 }, () => ({}));\nconst __refMap = {\n  \"#/components/schemas/GetUserListResponse\": __refs[0],\n  \"#/components/schemas/HTTPValidationError\": __refs[1],\n  \"#/components/schemas/SignUpUserRequest\": __refs[2],\n  \"#/components/schemas/SignUpUserResponse\": __refs[3],\n  \"#/components/schemas/DeleteUserRequest\": __refs[4],\n  \"#/components/schemas/DeleteUserResponse\": __refs[5],\n  \"#/components/schemas/DeleteUserPhotoResponse\": __refs[6],\n  \"#/components/schemas/AddUserRequest\": __refs[7],\n  \"#/components/schemas/AddUserResponse\": __refs[8],\n  \"#/components/schemas/GetCurrentUserResponse\": __refs[9],\n  \"#/components/schemas/UpdateCurrentUserRequest\": __refs[10],\n  \"#/components/schemas/UpdateCurrentUserResponse\": __refs[11],\n  \"#/components/schemas/GetTaskListResponse\": __refs[12],\n  \"#/components/schemas/CreateTaskRequest\": __refs[13],\n  \"#/components/schemas/CreateTaskResponse\": __refs[14],\n  \"#/components/schemas/DeleteTaskRequest\": __refs[15],\n  \"#/components/schemas/DeleteTaskResponse\": __refs[16],\n  \"#/components/schemas/UpdateTaskRequest\": __refs[17],\n  \"#/components/schemas/UpdateTaskResponse\": __refs[18],\n  \"#/components/schemas/CreateTaskUserRequest\": __refs[19],\n  \"#/components/schemas/CreateTaskUserResponse\": __refs[20],\n  \"#/components/schemas/DeleteTaskUserRequest\": __refs[21],\n  \"#/components/schemas/DeleteTaskUserResponse\": __refs[22],\n  \"#/components/schemas/GetUpcomingTaskChartResponse\": __refs[23],\n  \"#/components/schemas/GetTaskResponse\": __refs[24],\n  \"#/components/schemas/GetTasksByIncidentResponse\": __refs[25],\n  \"#/components/schemas/CreateTaskResultRequest\": __refs[26],\n  \"#/components/schemas/CreateTaskResultResponse\": __refs[27],\n  \"#/components/schemas/UserRole\": __refs[28],\n  \"#/components/schemas/UserResponse\": __refs[29],\n  \"#/components/schemas/TaskPriority\": __refs[30],\n  \"#/components/schemas/CreateDueRemainderRequest\": __refs[31],\n  \"#/components/schemas/TaskResponse\": __refs[32],\n  \"#/components/schemas/TaskResult\": __refs[33],\n  \"#/components/schemas/RegisterResultRequest\": __refs[34],\n  \"#/components/schemas/TaskResultResponse\": __refs[35],\n  \"#/components/schemas/TaskListWithRelationsResponse\": __refs[36],\n  \"#/components/schemas/TaskWithRelationsResponse\": __refs[37],\n  \"#/components/schemas/ValidationError\": __refs[38],\n  \"#/components/schemas/RegisterResult\": __refs[39],\n  \"#/components/schemas/User\": __refs[40],\n  \"#/components/schemas/TaskResultSchema\": __refs[41],\n  \"#/components/schemas/Form\": __refs[42],\n  \"#/components/schemas/DueRemainder\": __refs[43]\n};\nconst __refMapPaths = Object.keys(__refMap);\nObject.assign(__refs[0], {\n  \"title\": \"GetUserListResponse\",\n  \"description\": \"Response containing a paginated list of users.\",\n  \"required\": [\n    \"total\",\n    \"page\",\n    \"page_size\",\n    \"data\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"total\": {\n      \"title\": \"Total\",\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Total number of users matching the query.\"\n    },\n    \"page\": {\n      \"title\": \"Page\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Current page number.\"\n    },\n    \"page_size\": {\n      \"title\": \"Page Size\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Number of users per page.\"\n    },\n    \"data\": {\n      \"title\": \"Data\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/UserResponse\"],\n      \"description\": \"List of users.\"\n    }\n  }\n});\nObject.defineProperty(__refs[0], \"__$ref\", { value: __refMapPaths[0], enumerable: false });\nObject.assign(__refs[1], {\n  \"title\": \"HTTPValidationError\",\n  \"description\": \"Standard error response for validation errors.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"detail\": {\n      \"title\": \"Detail\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/ValidationError\"],\n      \"description\": \"List of validation errors.\"\n    }\n  }\n});\nObject.defineProperty(__refs[1], \"__$ref\", { value: __refMapPaths[1], enumerable: false });\nObject.assign(__refs[2], {\n  \"title\": \"SignUpUserRequest\",\n  \"description\": \"Request body for signing up a new user.\",\n  \"required\": [\n    \"first_name\",\n    \"last_name\",\n    \"email\",\n    \"password\",\n    \"role\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"first_name\": {\n      \"title\": \"First Name\",\n      \"maxLength\": 100,\n      \"minLength\": 1,\n      \"type\": \"string\",\n      \"description\": \"The user's first name.\"\n    },\n    \"last_name\": {\n      \"title\": \"Last Name\",\n      \"maxLength\": 100,\n      \"minLength\": 1,\n      \"type\": \"string\",\n      \"description\": \"The user's last name.\"\n    },\n    \"email\": {\n      \"title\": \"Email\",\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"description\": \"The user's email address.\"\n    },\n    \"password\": {\n      \"title\": \"Password\",\n      \"maxLength\": 300,\n      \"minLength\": 8,\n      \"type\": \"string\",\n      \"format\": \"password\",\n      \"writeOnly\": true,\n      \"description\": \"The user's password.\"\n    },\n    \"role\": __refMap[\"#/components/schemas/UserRole\"],\n    \"redirect_url\": {\n      \"title\": \"Redirect URL\",\n      \"type\": \"string\",\n      \"description\": \"Optional URL to redirect the user after signup, if applicable.\"\n    }\n  }\n});\nObject.defineProperty(__refs[2], \"__$ref\", { value: __refMapPaths[2], enumerable: false });\nObject.assign(__refs[3], {\n  \"title\": \"SignUpUserResponse\",\n  \"description\": \"Response containing the newly signed-up user's details and session information.\",\n  \"required\": [\n    \"user\",\n    \"session\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"user\": __refMap[\"#/components/schemas/UserResponse\"],\n    \"session\": {\n      \"title\": \"Session\",\n      \"type\": \"string\",\n      \"description\": \"Session token or identifier for the user's session.\"\n    }\n  }\n});\nObject.defineProperty(__refs[3], \"__$ref\", { value: __refMapPaths[3], enumerable: false });\nObject.assign(__refs[4], {\n  \"title\": \"DeleteUserRequest\",\n  \"description\": \"Request body for deleting a user.\",\n  \"required\": [\n    \"id\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"User ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier of the user to delete.\"\n    }\n  }\n});\nObject.defineProperty(__refs[4], \"__$ref\", { value: __refMapPaths[4], enumerable: false });\nObject.assign(__refs[5], {\n  \"title\": \"DeleteUserResponse\",\n  \"description\": \"Response indicating whether the user was successfully deleted.\",\n  \"required\": [\n    \"success\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"title\": \"Success\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the user was deleted successfully.\"\n    }\n  }\n});\nObject.defineProperty(__refs[5], \"__$ref\", { value: __refMapPaths[5], enumerable: false });\nObject.assign(__refs[6], {\n  \"title\": \"DeleteUserPhotoResponse\",\n  \"description\": \"Response indicating whether the user's avatar was successfully deleted.\",\n  \"required\": [\n    \"status\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"title\": \"Status\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the avatar was deleted successfully.\"\n    }\n  }\n});\nObject.defineProperty(__refs[6], \"__$ref\", { value: __refMapPaths[6], enumerable: false });\nObject.assign(__refs[7], {\n  \"title\": \"AddUserRequest\",\n  \"description\": \"Request body for adding a new user to the system.\",\n  \"required\": [\n    \"first_name\",\n    \"last_name\",\n    \"email\",\n    \"role\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"first_name\": {\n      \"title\": \"First Name\",\n      \"maxLength\": 255,\n      \"minLength\": 3,\n      \"type\": \"string\",\n      \"description\": \"The user's first name.\"\n    },\n    \"last_name\": {\n      \"title\": \"Last Name\",\n      \"maxLength\": 255,\n      \"minLength\": 3,\n      \"type\": \"string\",\n      \"description\": \"The user's last name.\"\n    },\n    \"email\": {\n      \"title\": \"Email\",\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"description\": \"The user's email address.\"\n    },\n    \"role\": __refMap[\"#/components/schemas/UserRole\"],\n    \"redirect_url\": {\n      \"title\": \"Redirect URL\",\n      \"type\": \"string\",\n      \"description\": \"Optional URL to redirect the user after creation, if applicable.\"\n    }\n  }\n});\nObject.defineProperty(__refs[7], \"__$ref\", { value: __refMapPaths[7], enumerable: false });\nObject.assign(__refs[8], {\n  \"title\": \"AddUserResponse\",\n  \"description\": \"Response containing the newly added user's details.\",\n  \"required\": [\n    \"user\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"user\": __refMap[\"#/components/schemas/UserResponse\"]\n  }\n});\nObject.defineProperty(__refs[8], \"__$ref\", { value: __refMapPaths[8], enumerable: false });\nObject.assign(__refs[9], {\n  \"title\": \"GetCurrentUserResponse\",\n  \"description\": \"Response containing the details of the authenticated user.\",\n  \"required\": [\n    \"user\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"user\": __refMap[\"#/components/schemas/UserResponse\"]\n  }\n});\nObject.defineProperty(__refs[9], \"__$ref\", { value: __refMapPaths[9], enumerable: false });\nObject.assign(__refs[10], {\n  \"title\": \"UpdateCurrentUserRequest\",\n  \"description\": \"Request body for updating the authenticated user's profile, such as their avatar.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"avatar\": {\n      \"title\": \"Avatar\",\n      \"type\": \"string\",\n      \"format\": \"byte\",\n      \"description\": \"Base64-encoded string representing the user's new avatar image.\"\n    }\n  }\n});\nObject.defineProperty(__refs[10], \"__$ref\", { value: __refMapPaths[10], enumerable: false });\nObject.assign(__refs[11], {\n  \"title\": \"UpdateCurrentUserResponse\",\n  \"description\": \"Response containing the updated details of the authenticated user.\",\n  \"required\": [\n    \"user\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"user\": __refMap[\"#/components/schemas/UserResponse\"]\n  }\n});\nObject.defineProperty(__refs[11], \"__$ref\", { value: __refMapPaths[11], enumerable: false });\nObject.assign(__refs[12], {\n  \"title\": \"GetTaskListResponse\",\n  \"description\": \"Response containing a paginated list of tasks.\",\n  \"required\": [\n    \"total\",\n    \"page\",\n    \"page_size\",\n    \"data\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"total\": {\n      \"title\": \"Total\",\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Total number of tasks matching the query.\"\n    },\n    \"page\": {\n      \"title\": \"Page\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Current page number.\"\n    },\n    \"page_size\": {\n      \"title\": \"Page Size\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Number of tasks per page.\"\n    },\n    \"data\": {\n      \"title\": \"Data\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/TaskListWithRelationsResponse\"],\n      \"description\": \"List of tasks with related data.\"\n    }\n  }\n});\nObject.defineProperty(__refs[12], \"__$ref\", { value: __refMapPaths[12], enumerable: false });\nObject.assign(__refs[13], {\n  \"title\": \"CreateTaskRequest\",\n  \"description\": \"Request body for creating a new task.\",\n  \"required\": [\n    \"name\",\n    \"priority\",\n    \"first_due_date\",\n    \"is_every_employee_needs_to_complete\",\n    \"form_id\",\n    \"start_date\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"maxLength\": 50,\n      \"minLength\": 1,\n      \"type\": \"string\",\n      \"description\": \"Name or title of the task.\"\n    },\n    \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n    \"first_due_date\": {\n      \"title\": \"First Due Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Initial due date for the task.\"\n    },\n    \"recurrency_rule\": {\n      \"title\": \"Recurrency Rule\",\n      \"type\": \"string\",\n      \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly').\"\n    },\n    \"user_ids\": {\n      \"title\": \"User IDs\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"default\": [],\n      \"description\": \"List of user IDs assigned to the task.\"\n    },\n    \"users_overdue_subs\": {\n      \"title\": \"Users Overdue Subs\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"default\": [],\n      \"description\": \"List of user IDs subscribed to overdue notifications.\"\n    },\n    \"users_completed_subs\": {\n      \"title\": \"Users Completed Subs\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"default\": [],\n      \"description\": \"List of user IDs subscribed to completion notifications.\"\n    },\n    \"is_every_employee_needs_to_complete\": {\n      \"title\": \"Is Every Employee Needs To Complete\",\n      \"type\": \"boolean\",\n      \"description\": \"If true, the task must be completed by all employees.\"\n    },\n    \"form_id\": {\n      \"title\": \"Form ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the form associated with the task.\"\n    },\n    \"description\": {\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"description\": \"Detailed description of the task's purpose or requirements.\"\n    },\n    \"due_remainders\": {\n      \"title\": \"Due Reminders\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/CreateDueRemainderRequest\"],\n      \"default\": [],\n      \"description\": \"List of reminders to send before or after the due date.\"\n    },\n    \"start_date\": {\n      \"title\": \"Start Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Date and time when the task becomes active.\"\n    }\n  }\n});\nObject.defineProperty(__refs[13], \"__$ref\", { value: __refMapPaths[13], enumerable: false });\nObject.assign(__refs[14], {\n  \"title\": \"CreateTaskResponse\",\n  \"description\": \"Response containing the newly created task's details.\",\n  \"required\": [\n    \"task\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task\": __refMap[\"#/components/schemas/TaskResponse\"]\n  }\n});\nObject.defineProperty(__refs[14], \"__$ref\", { value: __refMapPaths[14], enumerable: false });\nObject.assign(__refs[15], {\n  \"title\": \"DeleteTaskRequest\",\n  \"description\": \"Request body for deleting a task.\",\n  \"required\": [\n    \"id\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier of the task to delete.\"\n    }\n  }\n});\nObject.defineProperty(__refs[15], \"__$ref\", { value: __refMapPaths[15], enumerable: false });\nObject.assign(__refs[16], {\n  \"title\": \"DeleteTaskResponse\",\n  \"description\": \"Response indicating whether the task was successfully deleted.\",\n  \"required\": [\n    \"success\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"title\": \"Success\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the task was deleted successfully.\"\n    }\n  }\n});\nObject.defineProperty(__refs[16], \"__$ref\", { value: __refMapPaths[16], enumerable: false });\nObject.assign(__refs[17], {\n  \"title\": \"UpdateTaskRequest\",\n  \"description\": \"Request body for updating an existing task's details.\",\n  \"required\": [\n    \"id\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier of the task to update.\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"Updated name or title of the task.\"\n    },\n    \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n    \"first_due_date\": {\n      \"title\": \"First Due Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Updated initial due date for the task.\"\n    },\n    \"start_date\": {\n      \"title\": \"Start Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Updated timestamp when the task becomes active.\"\n    },\n    \"recurrency_rule\": {\n      \"title\": \"Recurrency Rule\",\n      \"type\": \"string\",\n      \"description\": \"Updated rule defining the task's recurrence pattern (e.g., 'daily', 'weekly').\"\n    },\n    \"is_every_employee_needs_to_complete\": {\n      \"title\": \"Requires All Employees\",\n      \"type\": \"boolean\",\n      \"default\": false,\n      \"description\": \"Indicates whether the task must be completed by all employees.\"\n    },\n    \"form_id\": {\n      \"title\": \"Form ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Updated identifier of the form associated with the task.\"\n    },\n    \"description\": {\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"description\": \"Updated detailed description of the task's purpose or requirements.\"\n    },\n    \"due_remainders\": {\n      \"title\": \"Due Reminders\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/CreateDueRemainderRequest\"],\n      \"default\": [],\n      \"description\": \"Updated list of reminders for the task's due date.\"\n    },\n    \"users_overdue_subs\": {\n      \"title\": \"Overdue Subscribers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"default\": [],\n      \"description\": \"Updated list of user IDs subscribed to overdue notifications.\"\n    },\n    \"user_ids\": {\n      \"title\": \"Assigned User IDs\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"default\": [],\n      \"description\": \"Updated list of user IDs assigned to the task.\"\n    },\n    \"users_completed_subs\": {\n      \"title\": \"Completion Subscribers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"default\": [],\n      \"description\": \"Updated list of user IDs subscribed to completion notifications.\"\n    }\n  }\n});\nObject.defineProperty(__refs[17], \"__$ref\", { value: __refMapPaths[17], enumerable: false });\nObject.assign(__refs[18], {\n  \"title\": \"UpdateTaskResponse\",\n  \"description\": \"Response containing the updated task's details.\",\n  \"required\": [\n    \"task\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task\": __refMap[\"#/components/schemas/TaskResponse\"]\n  }\n});\nObject.defineProperty(__refs[18], \"__$ref\", { value: __refMapPaths[18], enumerable: false });\nObject.assign(__refs[19], {\n  \"title\": \"CreateTaskUserRequest\",\n  \"description\": \"Request body for assigning users to a task.\",\n  \"required\": [\n    \"task_id\",\n    \"user_ids\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task_id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the task.\"\n    },\n    \"user_ids\": {\n      \"title\": \"User IDs\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"description\": \"List of user IDs to assign to the task.\"\n    }\n  }\n});\nObject.defineProperty(__refs[19], \"__$ref\", { value: __refMapPaths[19], enumerable: false });\nObject.assign(__refs[20], {\n  \"title\": \"CreateTaskUserResponse\",\n  \"description\": \"Response indicating whether users were successfully assigned to the task.\",\n  \"required\": [\n    \"success\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"title\": \"Success\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the assignment was successful.\"\n    }\n  }\n});\nObject.defineProperty(__refs[20], \"__$ref\", { value: __refMapPaths[20], enumerable: false });\nObject.assign(__refs[21], {\n  \"title\": \"DeleteTaskUserRequest\",\n  \"description\": \"Request body for unassigning users from a task.\",\n  \"required\": [\n    \"task_id\",\n    \"user_ids\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task_id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the task.\"\n    },\n    \"user_ids\": {\n      \"title\": \"User IDs\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 1\n      },\n      \"description\": \"List of user IDs to unassign from the task.\"\n    }\n  }\n});\nObject.defineProperty(__refs[21], \"__$ref\", { value: __refMapPaths[21], enumerable: false });\nObject.assign(__refs[22], {\n  \"title\": \"DeleteTaskUserResponse\",\n  \"description\": \"Response indicating whether users were successfully unassigned from the task.\",\n  \"required\": [\n    \"success\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"title\": \"Success\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the unassignment was successful.\"\n    }\n  }\n});\nObject.defineProperty(__refs[22], \"__$ref\", { value: __refMapPaths[22], enumerable: false });\nObject.assign(__refs[23], {\n  \"title\": \"GetUpcomingTaskChartResponse\",\n  \"description\": \"Response containing data for visualizing upcoming tasks grouped by due date.\",\n  \"required\": [\n    \"dates\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"dates\": {\n      \"title\": \"Task Counts by Date\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"description\": \"Due date for the tasks.\"\n          },\n          \"task_count\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"description\": \"Number of tasks due on this date.\"\n          }\n        },\n        \"required\": [\n          \"date\",\n          \"task_count\"\n        ]\n      },\n      \"description\": \"List of dates with corresponding task counts.\"\n    }\n  }\n});\nObject.defineProperty(__refs[23], \"__$ref\", { value: __refMapPaths[23], enumerable: false });\nObject.assign(__refs[24], {\n  \"title\": \"GetTaskResponse\",\n  \"description\": \"Response containing the details of a single task.\",\n  \"required\": [\n    \"task\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task\": __refMap[\"#/components/schemas/TaskWithRelationsResponse\"]\n  }\n});\nObject.defineProperty(__refs[24], \"__$ref\", { value: __refMapPaths[24], enumerable: false });\nObject.assign(__refs[25], {\n  \"title\": \"GetTasksByIncidentResponse\",\n  \"description\": \"Response containing a list of tasks associated with an incident result.\",\n  \"required\": [\n    \"tasks\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"tasks\": {\n      \"title\": \"Tasks\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/TaskWithRelationsResponse\"],\n      \"description\": \"List of tasks linked to the incident result.\"\n    }\n  }\n});\nObject.defineProperty(__refs[25], \"__$ref\", { value: __refMapPaths[25], enumerable: false });\nObject.assign(__refs[26], {\n  \"title\": \"CreateTaskResultRequest\",\n  \"description\": \"Request body for recording a task's result.\",\n  \"required\": [\n    \"task_id\",\n    \"result\",\n    \"form_results\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task_id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the task.\"\n    },\n    \"task_result_id\": {\n      \"title\": \"Task Result ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Optional identifier for an existing task result, if updating.\"\n    },\n    \"result\": __refMap[\"#/components/schemas/TaskResult\"],\n    \"form_results\": {\n      \"title\": \"Form Results\",\n      \"type\": \"object\",\n      \"description\": \"Data submitted for the task's associated form.\"\n    },\n    \"registers\": {\n      \"title\": \"Registers\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/RegisterResultRequest\"],\n      \"default\": [],\n      \"description\": \"List of register results associated with the task.\"\n    }\n  }\n});\nObject.defineProperty(__refs[26], \"__$ref\", { value: __refMapPaths[26], enumerable: false });\nObject.assign(__refs[27], {\n  \"title\": \"CreateTaskResultResponse\",\n  \"description\": \"Response containing the created task result's details.\",\n  \"required\": [\n    \"task_result\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"task_result\": __refMap[\"#/components/schemas/TaskResultResponse\"]\n  }\n});\nObject.defineProperty(__refs[27], \"__$ref\", { value: __refMapPaths[27], enumerable: false });\nObject.assign(__refs[28], {\n  \"title\": \"UserRole\",\n  \"enum\": [\n    \"admin\",\n    \"user\"\n  ],\n  \"type\": \"string\",\n  \"description\": \"Role assigned to a user: 'admin' for users with elevated permissions, 'user' for standard users.\"\n});\nObject.defineProperty(__refs[28], \"__$ref\", { value: __refMapPaths[28], enumerable: false });\nObject.assign(__refs[29], {\n  \"title\": \"UserResponse\",\n  \"description\": \"Detailed representation of a user, including authentication and role information.\",\n  \"required\": [\n    \"id\",\n    \"email\",\n    \"first_name\",\n    \"last_name\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the user.\"\n    },\n    \"email\": {\n      \"title\": \"Email\",\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"description\": \"User's email address, used for login and notifications.\"\n    },\n    \"first_name\": {\n      \"title\": \"First Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"User's first name.\"\n    },\n    \"last_name\": {\n      \"title\": \"Last Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"User's last name.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the user was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the user was last updated.\"\n    },\n    \"avatar_storage_item_id\": {\n      \"title\": \"Avatar Storage Item ID\",\n      \"type\": \"string\",\n      \"description\": \"Identifier for the user's avatar in storage, if applicable.\"\n    },\n    \"is_enabled_tfa\": {\n      \"title\": \"Two-Factor Authentication Enabled\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicates whether two-factor authentication is enabled for the user.\"\n    },\n    \"avatar_url\": {\n      \"title\": \"Avatar URL\",\n      \"type\": \"string\",\n      \"format\": \"uri\",\n      \"description\": \"URL to the user's avatar image, if available.\"\n    },\n    \"roles\": {\n      \"title\": \"Roles\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/UserRole\"],\n      \"default\": [],\n      \"description\": \"List of roles assigned to the user (e.g., admin, user).\"\n    },\n    \"keycloak_user_id\": {\n      \"title\": \"Keycloak User ID\",\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the user in the Keycloak authentication system.\"\n    }\n  }\n});\nObject.defineProperty(__refs[29], \"__$ref\", { value: __refMapPaths[29], enumerable: false });\nObject.assign(__refs[30], {\n  \"title\": \"TaskPriority\",\n  \"enum\": [\n    \"normal\",\n    \"high\",\n    \"critical\"\n  ],\n  \"type\": \"string\",\n  \"description\": \"Priority level of a task: 'normal' for standard tasks, 'high' for important tasks, 'critical' for urgent tasks requiring immediate attention.\"\n});\nObject.defineProperty(__refs[30], \"__$ref\", { value: __refMapPaths[30], enumerable: false });\nObject.assign(__refs[31], {\n  \"title\": \"CreateDueRemainderRequest\",\n  \"description\": \"Request body for creating a task due reminder.\",\n  \"required\": [\n    \"days_before_due\",\n    \"is_when_overdue\",\n    \"frequency\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"days_before_due\": {\n      \"title\": \"Days Before Due\",\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Number of days before the due date to send the reminder.\"\n    },\n    \"is_when_overdue\": {\n      \"title\": \"Is When Overdue\",\n      \"type\": \"boolean\",\n      \"description\": \"If true, the reminder is sent when the task becomes overdue.\"\n    },\n    \"frequency\": {\n      \"title\": \"Frequency\",\n      \"type\": \"string\",\n      \"description\": \"Frequency of the reminder (e.g., 'daily', 'weekly').\"\n    }\n  }\n});\nObject.defineProperty(__refs[31], \"__$ref\", { value: __refMapPaths[31], enumerable: false });\nObject.assign(__refs[32], {\n  \"title\": \"TaskResponse\",\n  \"description\": \"Represents a task's core details, used in responses for task creation and updates.\",\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"author_id\",\n    \"description\",\n    \"form_id\",\n    \"is_every_employee_needs_to_complete\",\n    \"priority\",\n    \"first_due_date\",\n    \"created_at\",\n    \"updated_at\",\n    \"start_date\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the task.\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"Name or title of the task.\"\n    },\n    \"author_id\": {\n      \"title\": \"Author ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the user who created the task.\"\n    },\n    \"description\": {\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"description\": \"Detailed description of the task's purpose or requirements.\"\n    },\n    \"form_id\": {\n      \"title\": \"Form ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the form associated with the task.\"\n    },\n    \"is_every_employee_needs_to_complete\": {\n      \"title\": \"Requires All Employees\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicates whether the task must be completed by all employees.\"\n    },\n    \"recurrency_rule\": {\n      \"title\": \"Recurrency Rule\",\n      \"type\": \"string\",\n      \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly'), if applicable.\"\n    },\n    \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n    \"first_due_date\": {\n      \"title\": \"First Due Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Initial due date for the task.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was last updated.\"\n    },\n    \"start_date\": {\n      \"title\": \"Start Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task becomes active.\"\n    }\n  }\n});\nObject.defineProperty(__refs[32], \"__$ref\", { value: __refMapPaths[32], enumerable: false });\nObject.assign(__refs[33], {\n  \"title\": \"TaskResult\",\n  \"enum\": [\n    \"completed\",\n    \"due\"\n  ],\n  \"type\": \"string\",\n  \"description\": \"Status of a task: 'completed' for finished tasks, 'due' for tasks pending completion.\"\n});\nObject.defineProperty(__refs[33], \"__$ref\", { value: __refMapPaths[33], enumerable: false });\nObject.assign(__refs[34], {\n  \"title\": \"RegisterResultRequest\",\n  \"description\": \"Request body for submitting a register result.\",\n  \"required\": [\n    \"register_id\",\n    \"result\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"register_id\": {\n      \"title\": \"Register ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the register.\"\n    },\n    \"result\": __refMap[\"#/components/schemas/RegisterResult\"]\n  }\n});\nObject.defineProperty(__refs[34], \"__$ref\", { value: __refMapPaths[34], enumerable: false });\nObject.assign(__refs[35], {\n  \"title\": \"TaskResultResponse\",\n  \"description\": \"Represents the result of a task, including completion details and submitted form data.\",\n  \"required\": [\n    \"id\",\n    \"task_id\",\n    \"completed_by_user_id\",\n    \"completion_date\",\n    \"result\",\n    \"form_results\",\n    \"created_at\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the task result.\"\n    },\n    \"task_id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the associated task.\"\n    },\n    \"completed_by_user_id\": {\n      \"title\": \"Completed By User ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the user who completed the task.\"\n    },\n    \"completion_date\": {\n      \"title\": \"Completion Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was completed.\"\n    },\n    \"result\": __refMap[\"#/components/schemas/TaskResult\"],\n    \"form_results\": {\n      \"title\": \"Form Results\",\n      \"type\": \"object\",\n      \"description\": \"Data submitted for the task's associated form.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task result was created.\"\n    }\n  }\n});\nObject.defineProperty(__refs[35], \"__$ref\", { value: __refMapPaths[35], enumerable: false });\nObject.assign(__refs[36], {\n  \"title\": \"TaskListWithRelationsResponse\",\n  \"description\": \"Represents a task in a list view with related data, including assigned users and task results, used for paginated task responses.\",\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"author_id\",\n    \"description\",\n    \"form_id\",\n    \"priority\",\n    \"is_every_employee_needs_to_complete\",\n    \"first_due_date\",\n    \"form_name\",\n    \"start_date\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the task.\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"Name or title of the task.\"\n    },\n    \"author_id\": {\n      \"title\": \"Author ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the user who created the task.\"\n    },\n    \"description\": {\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"description\": \"Detailed description of the task's purpose or requirements.\"\n    },\n    \"overdue_date\": {\n      \"title\": \"Overdue Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task becomes overdue, if applicable.\"\n    },\n    \"form_id\": {\n      \"title\": \"Form ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the form associated with the task.\"\n    },\n    \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n    \"is_every_employee_needs_to_complete\": {\n      \"title\": \"Requires All Employees\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicates whether the task must be completed by all employees.\"\n    },\n    \"recurrency_rule\": {\n      \"title\": \"Recurrency Rule\",\n      \"type\": \"string\",\n      \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly'), if applicable.\"\n    },\n    \"first_due_date\": {\n      \"title\": \"First Due Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Initial due date for the task.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was last updated.\"\n    },\n    \"users\": {\n      \"title\": \"Assigned Users\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/User\"],\n      \"default\": [],\n      \"description\": \"List of users assigned to the task.\"\n    },\n    \"form_name\": {\n      \"title\": \"Form Name\",\n      \"type\": \"string\",\n      \"description\": \"Name of the form associated with the task.\"\n    },\n    \"task_results\": {\n      \"title\": \"Task Results\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/TaskResultSchema\"],\n      \"default\": [],\n      \"description\": \"List of results recorded for the task.\"\n    },\n    \"start_date\": {\n      \"title\": \"Start Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task becomes active.\"\n    }\n  }\n});\nObject.defineProperty(__refs[36], \"__$ref\", { value: __refMapPaths[36], enumerable: false });\nObject.assign(__refs[37], {\n  \"title\": \"TaskWithRelationsResponse\",\n  \"description\": \"Detailed task representation with related entities like form, users, results, and notifications.\",\n  \"required\": [\n    \"id\",\n    \"name\",\n    \"author_id\",\n    \"description\",\n    \"form_id\",\n    \"form\",\n    \"priority\",\n    \"is_every_employee_needs_to_complete\",\n    \"first_due_date\",\n    \"start_date\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the task.\"\n    },\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"Name or title of the task.\"\n    },\n    \"author_id\": {\n      \"title\": \"Author ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the user who created the task.\"\n    },\n    \"description\": {\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"description\": \"Detailed description of the task's purpose or requirements.\"\n    },\n    \"form_id\": {\n      \"title\": \"Form ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the form associated with the task.\"\n    },\n    \"form\": __refMap[\"#/components/schemas/Form\"],\n    \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n    \"is_every_employee_needs_to_complete\": {\n      \"title\": \"Requires All Employees\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicates whether the task must be completed by all employees.\"\n    },\n    \"recurrency_rule\": {\n      \"title\": \"Recurrency Rule\",\n      \"type\": \"string\",\n      \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly'), if applicable.\"\n    },\n    \"overdue_date\": {\n      \"title\": \"Overdue Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task becomes overdue, if applicable.\"\n    },\n    \"first_due_date\": {\n      \"title\": \"First Due Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Initial due date for the task.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was last updated.\"\n    },\n    \"users\": {\n      \"title\": \"Assigned Users\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/User\"],\n      \"default\": [],\n      \"description\": \"List of users assigned to the task.\"\n    },\n    \"task_results\": {\n      \"title\": \"Task Results\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/TaskResultSchema\"],\n      \"default\": [],\n      \"description\": \"List of results recorded for the task.\"\n    },\n    \"due_remainders\": {\n      \"title\": \"Due Reminders\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/DueRemainder\"],\n      \"default\": [],\n      \"description\": \"List of reminders for the task's due date.\"\n    },\n    \"overdue_subs\": {\n      \"title\": \"Overdue Subscribers\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/User\"],\n      \"default\": [],\n      \"description\": \"List of users subscribed to overdue notifications.\"\n    },\n    \"complete_subs\": {\n      \"title\": \"Completion Subscribers\",\n      \"type\": \"array\",\n      \"items\": __refMap[\"#/components/schemas/User\"],\n      \"default\": [],\n      \"description\": \"List of users subscribed to completion notifications.\"\n    },\n    \"start_date\": {\n      \"title\": \"Start Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task becomes active.\"\n    }\n  }\n});\nObject.defineProperty(__refs[37], \"__$ref\", { value: __refMapPaths[37], enumerable: false });\nObject.assign(__refs[38], {\n  \"title\": \"ValidationError\",\n  \"description\": \"Details of a validation error encountered in a request.\",\n  \"required\": [\n    \"loc\",\n    \"msg\",\n    \"type\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"loc\": {\n      \"title\": \"Location\",\n      \"type\": \"array\",\n      \"items\": {\n        \"anyOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      \"description\": \"Path to the field that caused the validation error.\"\n    },\n    \"msg\": {\n      \"title\": \"Message\",\n      \"type\": \"string\",\n      \"description\": \"Description of the validation error.\"\n    },\n    \"type\": {\n      \"title\": \"Error Type\",\n      \"type\": \"string\",\n      \"description\": \"Type or category of the validation error.\"\n    }\n  }\n});\nObject.defineProperty(__refs[38], \"__$ref\", { value: __refMapPaths[38], enumerable: false });\nObject.assign(__refs[39], {\n  \"title\": \"RegisterResult\",\n  \"enum\": [\n    \"compliant\",\n    \"not_compliant\",\n    \"in_progress\",\n    \"non_applicable\"\n  ],\n  \"description\": \"Result of a register check: 'compliant' for meeting requirements, 'not_compliant' for failing requirements, 'in_progress' for ongoing checks, 'non_applicable' for irrelevant checks.\"\n});\nObject.defineProperty(__refs[39], \"__$ref\", { value: __refMapPaths[39], enumerable: false });\nObject.assign(__refs[40], {\n  \"title\": \"User\",\n  \"description\": \"Represents a simplified user entity for use in task relations.\",\n  \"required\": [\n    \"id\",\n    \"first_name\",\n    \"last_name\",\n    \"email\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the user.\"\n    },\n    \"first_name\": {\n      \"title\": \"First Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"User's first name.\"\n    },\n    \"last_name\": {\n      \"title\": \"Last Name\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 100,\n      \"description\": \"User's last name.\"\n    },\n    \"email\": {\n      \"title\": \"Email\",\n      \"type\": \"string\",\n      \"format\": \"email\",\n      \"description\": \"User's email address.\"\n    },\n    \"avatar_url\": {\n      \"title\": \"Avatar URL\",\n      \"type\": \"string\",\n      \"format\": \"uri\",\n      \"description\": \"URL to the user's avatar image, if available.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the user was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the user was last updated.\"\n    }\n  }\n});\nObject.defineProperty(__refs[40], \"__$ref\", { value: __refMapPaths[40], enumerable: false });\nObject.assign(__refs[41], {\n  \"title\": \"TaskResultSchema\",\n  \"description\": \"Schema for a task result, including metadata and form data, used in task relations.\",\n  \"required\": [\n    \"id\",\n    \"task_id\",\n    \"completed_by_user_id\",\n    \"completion_date\",\n    \"result\",\n    \"form_results\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Unique identifier for the task result.\"\n    },\n    \"task_id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the associated task.\"\n    },\n    \"completed_by_user_id\": {\n      \"title\": \"Completed By User ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the user who completed the task.\"\n    },\n    \"completion_date\": {\n      \"title\": \"Completion Date\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task was completed.\"\n    },\n    \"result\": __refMap[\"#/components/schemas/TaskResult\"],\n    \"form_results\": {\n      \"title\": \"Form Results\",\n      \"type\": \"object\",\n      \"description\": \"Data submitted for the task's associated form.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task result was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the task result was last updated.\"\n    }\n  }\n});\nObject.defineProperty(__refs[41], \"__$ref\", { value: __refMapPaths[41], enumerable: false });\nObject.assign(__refs[42], {\n  \"title\": \"Form\",\n  \"description\": \"Represents a form used for tasks or incidents.\",\n  \"required\": [\n    \"name\",\n    \"data\",\n    \"id\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"description\": \"Name of the form.\"\n    },\n    \"data\": {\n      \"title\": \"Data\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\"\n      },\n      \"description\": \"Structured data defining the form's fields and layout.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the form was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the form was last updated.\"\n    },\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"description\": \"Unique identifier for the form.\"\n    }\n  }\n});\nObject.defineProperty(__refs[42], \"__$ref\", { value: __refMapPaths[42], enumerable: false });\nObject.assign(__refs[43], {\n  \"title\": \"DueRemainder\",\n  \"description\": \"Represents a reminder for a task's due date.\",\n  \"required\": [\n    \"days_before_due\",\n    \"is_when_overdue\",\n    \"frequency\",\n    \"task_id\",\n    \"id\"\n  ],\n  \"type\": \"object\",\n  \"properties\": {\n    \"days_before_due\": {\n      \"title\": \"Days Before Due\",\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Number of days before the due date to send the reminder.\"\n    },\n    \"is_when_overdue\": {\n      \"title\": \"Is When Overdue\",\n      \"type\": \"boolean\",\n      \"description\": \"If true, the reminder is sent when the task becomes overdue.\"\n    },\n    \"frequency\": {\n      \"title\": \"Frequency\",\n      \"type\": \"string\",\n      \"description\": \"Frequency of the reminder (e.g., 'daily', 'weekly').\"\n    },\n    \"task_id\": {\n      \"title\": \"Task ID\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"description\": \"Identifier of the associated task.\"\n    },\n    \"created_at\": {\n      \"title\": \"Created At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the reminder was created.\"\n    },\n    \"updated_at\": {\n      \"title\": \"Updated At\",\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"description\": \"Timestamp when the reminder was last updated.\"\n    },\n    \"id\": {\n      \"title\": \"ID\",\n      \"type\": \"integer\",\n      \"description\": \"Unique identifier for the reminder.\"\n    }\n  }\n});\nObject.defineProperty(__refs[43], \"__$ref\", { value: __refMapPaths[43], enumerable: false });\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"Vestra Compliance API\",\n    \"description\": \"Vestra Compliance Backend REST API for managing users, tasks, and compliance-related operations. This is version 1.0; future versions may introduce breaking changes. All endpoints require authentication unless explicitly stated otherwise.\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/v1/users\": {\n      \"get\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Retrieve a Paginated List of Users\",\n        \"description\": \"Fetches a list of users with pagination and optional filtering. Supports excluding specific users and filtering by name. Requires authentication with appropriate permissions.\",\n        \"operationId\": \"getUserList\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Page\",\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"The page number for pagination (1-based indexing).\"\n          },\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Page Size\",\n              \"type\": \"integer\",\n              \"minimum\": 1,\n              \"maximum\": 100\n            },\n            \"name\": \"page_size\",\n            \"in\": \"query\",\n            \"description\": \"Number of users to return per page.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Exclude User IDs\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"exclude\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of user IDs to exclude from the results.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Filter By Name\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"filter_by_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter users by partial match on first or last name.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the list of users.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/GetUserListResponse\"],\n                \"examples\": {\n                  \"default\": {\n                    \"value\": {\n                      \"total\": 100,\n                      \"page\": 1,\n                      \"page_size\": 10,\n                      \"data\": [\n                        {\n                          \"id\": 1,\n                          \"email\": \"john.doe@example.com\",\n                          \"first_name\": \"John\",\n                          \"last_name\": \"Doe\"\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid input parameters provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Sign Up a New User\",\n        \"description\": \"Creates a new user account with the specified details. Requires authentication and admin permissions unless used in a public registration flow.\",\n        \"operationId\": \"signUpUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/SignUpUserRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Details of the user to be created, including name, email, password, and role.\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"User successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/SignUpUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid user details provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Delete a User\",\n        \"description\": \"Removes a user from the system by their ID. Requires authentication and admin permissions.\",\n        \"operationId\": \"deleteUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/DeleteUserRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"ID of the user to delete.\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/DeleteUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"User not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid user ID provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/users/avatar\": {\n      \"delete\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Delete Current User's Avatar\",\n        \"description\": \"Removes the avatar image associated with the authenticated user's account.\",\n        \"operationId\": \"deleteUserAvatar\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Avatar successfully deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/DeleteUserPhotoResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Avatar not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"No avatar found for this user.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/users/add-user\": {\n      \"post\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Add a New User\",\n        \"description\": \"Adds a new user to the system with specified details, typically used by admins. Requires authentication and admin permissions.\",\n        \"operationId\": \"addUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/AddUserRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Details of the user to be added, including name, email, and role.\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"User successfully added.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/AddUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid user details provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/users/current\": {\n      \"get\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Retrieve Current User Details\",\n        \"description\": \"Fetches the details of the authenticated user, including their profile.\",\n        \"operationId\": \"getCurrentUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved current user details.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/GetCurrentUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"users\"\n        ],\n        \"summary\": \"Update Current User Details\",\n        \"description\": \"Updates the authenticated user's profile, such as their avatar. Requires authentication.\",\n        \"operationId\": \"updateCurrentUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/UpdateCurrentUserRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Updated user details, such as a new avatar.\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/UpdateCurrentUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid update details provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/tasks\": {\n      \"get\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Retrieve a Paginated List of Tasks\",\n        \"description\": \"Fetches a list of tasks with pagination and extensive filtering options, including by name, priority, assignee, and date range. Supports sorting by due date or priority. Requires authentication with task read permissions.\",\n        \"operationId\": \"getTaskList\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Page\",\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"The page number for pagination (1-based indexing).\"\n          },\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Page Size\",\n              \"type\": \"integer\",\n              \"minimum\": 1,\n              \"maximum\": 100\n            },\n            \"name\": \"page_size\",\n            \"in\": \"query\",\n            \"description\": \"Number of tasks to return per page.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Filter By Name\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"filter_by_name\",\n            \"in\": \"query\",\n            \"description\": \"Filter tasks by partial match on task name.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Filter By Priority\",\n              \"type\": \"string\",\n              \"enum\": [\n                \"normal\",\n                \"high\",\n                \"critical\"\n              ],\n              \"default\": \"\"\n            },\n            \"name\": \"filter_by_priority\",\n            \"in\": \"query\",\n            \"description\": \"Filter tasks by priority level (normal, high, critical).\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Filter By Result\",\n              \"type\": \"string\",\n              \"enum\": [\n                \"completed\",\n                \"due\"\n              ],\n              \"default\": \"\"\n            },\n            \"name\": \"filter_by_result\",\n            \"in\": \"query\",\n            \"description\": \"Filter tasks by their completion status (completed or due).\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Filter By Assignee Users\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"filter_by_assignee_users\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of user IDs to filter tasks by assignees.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Filter By Registers\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"filter_by_registers\",\n            \"in\": \"query\",\n            \"description\": \"Filter tasks by associated register IDs.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"History\",\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"name\": \"history\",\n            \"in\": \"query\",\n            \"description\": \"If true, includes completed tasks in the results.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Order By Due Date\",\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"name\": \"order_by_due_date\",\n            \"in\": \"query\",\n            \"description\": \"If true, sorts tasks by due date in ascending order.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Order By Priority\",\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"name\": \"order_by_priority\",\n            \"in\": \"query\",\n            \"description\": \"If true, sorts tasks by priority (critical > high > normal).\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"From Date\",\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            },\n            \"name\": \"from_date\",\n            \"in\": \"query\",\n            \"description\": \"Filter tasks with due dates on or after this date.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"To Date\",\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            },\n            \"name\": \"to_date\",\n            \"in\": \"query\",\n            \"description\": \"Filter tasks with due dates on or before this date.\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"All Tasks\",\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"name\": \"all_tasks\",\n            \"in\": \"query\",\n            \"description\": \"If true, includes all tasks regardless of other filters.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the list of tasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/GetTaskListResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid input parameters provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Create a New Task\",\n        \"description\": \"Creates a new task with specified details such as name, priority, due date, and assigned users. Supports recurring tasks and reminders. Requires authentication with task creation permissions.\",\n        \"operationId\": \"createTask\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/CreateTaskRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Details of the task to be created, including mandatory fields like name, priority, and due date.\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Task successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/CreateTaskResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task details provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Delete a Task\",\n        \"description\": \"Removes a task from the system by its ID. Requires authentication with task deletion permissions.\",\n        \"operationId\": \"deleteTask\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/DeleteTaskRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"ID of the task to delete.\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Task successfully deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/DeleteTaskResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Task not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Task not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task ID provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Update a Task\",\n        \"description\": \"Updates an existing task's details, such as name, priority, or assignees. Requires authentication with task update permissions.\",\n        \"operationId\": \"updateTask\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/UpdateTaskRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Updated task details, including the task ID and fields to modify.\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Task successfully updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/UpdateTaskResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Task not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Task not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task details provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/tasks/users\": {\n      \"post\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Assign Users to a Task\",\n        \"description\": \"Assigns one or more users to an existing task. Requires authentication with task update permissions.\",\n        \"operationId\": \"addUsersToTask\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/CreateTaskUserRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Task ID and list of user IDs to assign.\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Users successfully assigned to the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/CreateTaskUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Task or users not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Task or users not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task or user IDs provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Remove Users from a Task\",\n        \"description\": \"Unassigns one or more users from an existing task. Requires authentication with task update permissions.\",\n        \"operationId\": \"deleteUsersFromTask\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/DeleteTaskUserRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Task ID and list of user IDs to unassign.\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Users successfully unassigned from the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/DeleteTaskUserResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Task or users not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Task or users not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task or user IDs provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/tasks/upcoming-tasks-chart\": {\n      \"get\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Retrieve Upcoming Tasks Chart Data\",\n        \"description\": \"Fetches data for visualizing upcoming tasks within a specified date range, grouped by due date. Requires authentication with task read permissions.\",\n        \"operationId\": \"getUpcomingTasksChart\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"From Date\",\n              \"type\": \"string\",\n              \"format\": \"date\"\n            },\n            \"name\": \"from_date\",\n            \"in\": \"query\",\n            \"description\": \"Start date for the task due date range (inclusive).\"\n          },\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"To Date\",\n              \"type\": \"string\",\n              \"format\": \"date\"\n            },\n            \"name\": \"to_date\",\n            \"in\": \"query\",\n            \"description\": \"End date for the task due date range (inclusive).\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Timezone\",\n              \"type\": \"string\",\n              \"default\": \"Australia/Sydney\"\n            },\n            \"name\": \"timezone\",\n            \"in\": \"query\",\n            \"description\": \"Timezone for interpreting dates (e.g., 'UTC', 'Australia/Sydney').\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved upcoming tasks chart data.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/GetUpcomingTaskChartResponse\"],\n                \"examples\": {\n                  \"default\": {\n                    \"value\": {\n                      \"dates\": [\n                        {\n                          \"date\": \"2025-04-14\",\n                          \"task_count\": 5\n                        },\n                        {\n                          \"date\": \"2025-04-15\",\n                          \"task_count\": 3\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid date range or timezone provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/tasks/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Retrieve a Task by ID\",\n        \"description\": \"Fetches the details of a specific task by its ID, including associated users and results. Requires authentication with task read permissions.\",\n        \"operationId\": \"getTask\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Task ID\",\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier of the task to retrieve.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/GetTaskResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Task not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Task not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task ID provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/tasks/by-incident-result/{incident_result_id}\": {\n      \"get\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Retrieve Tasks by Incident Result ID\",\n        \"description\": \"Fetches all tasks associated with a specific incident result ID. Requires authentication with task read permissions.\",\n        \"operationId\": \"getTasksByIncidentResult\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Incident Result ID\",\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"name\": \"incident_result_id\",\n            \"in\": \"path\",\n            \"description\": \"Unique identifier of the incident result.\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved tasks for the incident result.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/GetTasksByIncidentResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Incident result not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Incident result not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid incident result ID provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    },\n    \"/v1/tasks/result\": {\n      \"post\": {\n        \"tags\": [\n          \"tasks\"\n        ],\n        \"summary\": \"Create a Task Result\",\n        \"description\": \"Records the result of a task, such as completion status and form data. Requires authentication with task update permissions.\",\n        \"operationId\": \"createTaskResult\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/CreateTaskResultRequest\"]\n            }\n          },\n          \"required\": true,\n          \"description\": \"Details of the task result, including task ID, result status, and form data.\"\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Task result successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/CreateTaskResultResponse\"]\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Invalid or missing authentication token.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Task not found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"detail\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"Task not found.\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid task result details provided.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/HTTPValidationError\"]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AddUserRequest\": {\n        \"title\": \"AddUserRequest\",\n        \"description\": \"Request body for adding a new user to the system.\",\n        \"required\": [\n          \"first_name\",\n          \"last_name\",\n          \"email\",\n          \"role\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"first_name\": {\n            \"title\": \"First Name\",\n            \"maxLength\": 255,\n            \"minLength\": 3,\n            \"type\": \"string\",\n            \"description\": \"The user's first name.\"\n          },\n          \"last_name\": {\n            \"title\": \"Last Name\",\n            \"maxLength\": 255,\n            \"minLength\": 3,\n            \"type\": \"string\",\n            \"description\": \"The user's last name.\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"The user's email address.\"\n          },\n          \"role\": __refMap[\"#/components/schemas/UserRole\"],\n          \"redirect_url\": {\n            \"title\": \"Redirect URL\",\n            \"type\": \"string\",\n            \"description\": \"Optional URL to redirect the user after creation, if applicable.\"\n          }\n        }\n      },\n      \"AddUserResponse\": {\n        \"title\": \"AddUserResponse\",\n        \"description\": \"Response containing the newly added user's details.\",\n        \"required\": [\n          \"user\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": __refMap[\"#/components/schemas/UserResponse\"]\n        }\n      },\n      \"CreateDueRemainderRequest\": {\n        \"title\": \"CreateDueRemainderRequest\",\n        \"description\": \"Request body for creating a task due reminder.\",\n        \"required\": [\n          \"days_before_due\",\n          \"is_when_overdue\",\n          \"frequency\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"days_before_due\": {\n            \"title\": \"Days Before Due\",\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"description\": \"Number of days before the due date to send the reminder.\"\n          },\n          \"is_when_overdue\": {\n            \"title\": \"Is When Overdue\",\n            \"type\": \"boolean\",\n            \"description\": \"If true, the reminder is sent when the task becomes overdue.\"\n          },\n          \"frequency\": {\n            \"title\": \"Frequency\",\n            \"type\": \"string\",\n            \"description\": \"Frequency of the reminder (e.g., 'daily', 'weekly').\"\n          }\n        }\n      },\n      \"CreateTaskRequest\": {\n        \"title\": \"CreateTaskRequest\",\n        \"description\": \"Request body for creating a new task.\",\n        \"required\": [\n          \"name\",\n          \"priority\",\n          \"first_due_date\",\n          \"is_every_employee_needs_to_complete\",\n          \"form_id\",\n          \"start_date\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"maxLength\": 50,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"Name or title of the task.\"\n          },\n          \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n          \"first_due_date\": {\n            \"title\": \"First Due Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Initial due date for the task.\"\n          },\n          \"recurrency_rule\": {\n            \"title\": \"Recurrency Rule\",\n            \"type\": \"string\",\n            \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly').\"\n          },\n          \"user_ids\": {\n            \"title\": \"User IDs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"default\": [],\n            \"description\": \"List of user IDs assigned to the task.\"\n          },\n          \"users_overdue_subs\": {\n            \"title\": \"Users Overdue Subs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"default\": [],\n            \"description\": \"List of user IDs subscribed to overdue notifications.\"\n          },\n          \"users_completed_subs\": {\n            \"title\": \"Users Completed Subs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"default\": [],\n            \"description\": \"List of user IDs subscribed to completion notifications.\"\n          },\n          \"is_every_employee_needs_to_complete\": {\n            \"title\": \"Is Every Employee Needs To Complete\",\n            \"type\": \"boolean\",\n            \"description\": \"If true, the task must be completed by all employees.\"\n          },\n          \"form_id\": {\n            \"title\": \"Form ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the form associated with the task.\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"default\": \"\",\n            \"description\": \"Detailed description of the task's purpose or requirements.\"\n          },\n          \"due_remainders\": {\n            \"title\": \"Due Reminders\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/CreateDueRemainderRequest\"],\n            \"default\": [],\n            \"description\": \"List of reminders to send before or after the due date.\"\n          },\n          \"start_date\": {\n            \"title\": \"Start Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Date and time when the task becomes active.\"\n          }\n        }\n      },\n      \"CreateTaskResponse\": {\n        \"title\": \"CreateTaskResponse\",\n        \"description\": \"Response containing the newly created task's details.\",\n        \"required\": [\n          \"task\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": __refMap[\"#/components/schemas/TaskResponse\"]\n        }\n      },\n      \"CreateTaskResultRequest\": {\n        \"title\": \"CreateTaskResultRequest\",\n        \"description\": \"Request body for recording a task's result.\",\n        \"required\": [\n          \"task_id\",\n          \"result\",\n          \"form_results\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task_id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the task.\"\n          },\n          \"task_result_id\": {\n            \"title\": \"Task Result ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Optional identifier for an existing task result, if updating.\"\n          },\n          \"result\": __refMap[\"#/components/schemas/TaskResult\"],\n          \"form_results\": {\n            \"title\": \"Form Results\",\n            \"type\": \"object\",\n            \"description\": \"Data submitted for the task's associated form.\"\n          },\n          \"registers\": {\n            \"title\": \"Registers\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/RegisterResultRequest\"],\n            \"default\": [],\n            \"description\": \"List of register results associated with the task.\"\n          }\n        }\n      },\n      \"CreateTaskResultResponse\": {\n        \"title\": \"CreateTaskResultResponse\",\n        \"description\": \"Response containing the created task result's details.\",\n        \"required\": [\n          \"task_result\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task_result\": __refMap[\"#/components/schemas/TaskResultResponse\"]\n        }\n      },\n      \"CreateTaskUserRequest\": {\n        \"title\": \"CreateTaskUserRequest\",\n        \"description\": \"Request body for assigning users to a task.\",\n        \"required\": [\n          \"task_id\",\n          \"user_ids\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task_id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the task.\"\n          },\n          \"user_ids\": {\n            \"title\": \"User IDs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"description\": \"List of user IDs to assign to the task.\"\n          }\n        }\n      },\n      \"CreateTaskUserResponse\": {\n        \"title\": \"CreateTaskUserResponse\",\n        \"description\": \"Response indicating whether users were successfully assigned to the task.\",\n        \"required\": [\n          \"success\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"title\": \"Success\",\n            \"type\": \"boolean\",\n            \"description\": \"True if the assignment was successful.\"\n          }\n        }\n      },\n      \"DeleteTaskRequest\": {\n        \"title\": \"DeleteTaskRequest\",\n        \"description\": \"Request body for deleting a task.\",\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier of the task to delete.\"\n          }\n        }\n      },\n      \"DeleteTaskResponse\": {\n        \"title\": \"DeleteTaskResponse\",\n        \"description\": \"Response indicating whether the task was successfully deleted.\",\n        \"required\": [\n          \"success\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"title\": \"Success\",\n            \"type\": \"boolean\",\n            \"description\": \"True if the task was deleted successfully.\"\n          }\n        }\n      },\n      \"DeleteTaskUserRequest\": {\n        \"title\": \"DeleteTaskUserRequest\",\n        \"description\": \"Request body for unassigning users from a task.\",\n        \"required\": [\n          \"task_id\",\n          \"user_ids\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task_id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the task.\"\n          },\n          \"user_ids\": {\n            \"title\": \"User IDs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"description\": \"List of user IDs to unassign from the task.\"\n          }\n        }\n      },\n      \"DeleteTaskUserResponse\": {\n        \"title\": \"DeleteTaskUserResponse\",\n        \"description\": \"Response indicating whether users were successfully unassigned from the task.\",\n        \"required\": [\n          \"success\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"title\": \"Success\",\n            \"type\": \"boolean\",\n            \"description\": \"True if the unassignment was successful.\"\n          }\n        }\n      },\n      \"DeleteUserPhotoResponse\": {\n        \"title\": \"DeleteUserPhotoResponse\",\n        \"description\": \"Response indicating whether the user's avatar was successfully deleted.\",\n        \"required\": [\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"title\": \"Status\",\n            \"type\": \"boolean\",\n            \"description\": \"True if the avatar was deleted successfully.\"\n          }\n        }\n      },\n      \"DeleteUserRequest\": {\n        \"title\": \"DeleteUserRequest\",\n        \"description\": \"Request body for deleting a user.\",\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"User ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier of the user to delete.\"\n          }\n        }\n      },\n      \"DeleteUserResponse\": {\n        \"title\": \"DeleteUserResponse\",\n        \"description\": \"Response indicating whether the user was successfully deleted.\",\n        \"required\": [\n          \"success\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"title\": \"Success\",\n            \"type\": \"boolean\",\n            \"description\": \"True if the user was deleted successfully.\"\n          }\n        }\n      },\n      \"DueRemainder\": {\n        \"title\": \"DueRemainder\",\n        \"description\": \"Represents a reminder for a task's due date.\",\n        \"required\": [\n          \"days_before_due\",\n          \"is_when_overdue\",\n          \"frequency\",\n          \"task_id\",\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"days_before_due\": {\n            \"title\": \"Days Before Due\",\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"description\": \"Number of days before the due date to send the reminder.\"\n          },\n          \"is_when_overdue\": {\n            \"title\": \"Is When Overdue\",\n            \"type\": \"boolean\",\n            \"description\": \"If true, the reminder is sent when the task becomes overdue.\"\n          },\n          \"frequency\": {\n            \"title\": \"Frequency\",\n            \"type\": \"string\",\n            \"description\": \"Frequency of the reminder (e.g., 'daily', 'weekly').\"\n          },\n          \"task_id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the associated task.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the reminder was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the reminder was last updated.\"\n          },\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"description\": \"Unique identifier for the reminder.\"\n          }\n        }\n      },\n      \"Form\": {\n        \"title\": \"Form\",\n        \"description\": \"Represents a form used for tasks or incidents.\",\n        \"required\": [\n          \"name\",\n          \"data\",\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the form.\"\n          },\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Structured data defining the form's fields and layout.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the form was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the form was last updated.\"\n          },\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"description\": \"Unique identifier for the form.\"\n          }\n        }\n      },\n      \"FormResponse\": {\n        \"title\": \"FormResponse\",\n        \"description\": \"Represents the response data for a submitted form.\",\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"data\",\n          \"created_at\",\n          \"updated_at\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"description\": \"Unique identifier for the form response.\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the form.\"\n          },\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Submitted data for the form's fields.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the form response was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the form response was last updated.\"\n          }\n        }\n      },\n      \"GetCurrentUserResponse\": {\n        \"title\": \"GetCurrentUserResponse\",\n        \"description\": \"Response containing the details of the authenticated user.\",\n        \"required\": [\n          \"user\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": __refMap[\"#/components/schemas/UserResponse\"]\n        }\n      },\n      \"GetTaskListResponse\": {\n        \"title\": \"GetTaskListResponse\",\n        \"description\": \"Response containing a paginated list of tasks.\",\n        \"required\": [\n          \"total\",\n          \"page\",\n          \"page_size\",\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"total\": {\n            \"title\": \"Total\",\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"description\": \"Total number of tasks matching the query.\"\n          },\n          \"page\": {\n            \"title\": \"Page\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Current page number.\"\n          },\n          \"page_size\": {\n            \"title\": \"Page Size\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Number of tasks per page.\"\n          },\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/TaskListWithRelationsResponse\"],\n            \"description\": \"List of tasks with related data.\"\n          }\n        }\n      },\n      \"GetTaskResponse\": {\n        \"title\": \"GetTaskResponse\",\n        \"description\": \"Response containing the details of a single task.\",\n        \"required\": [\n          \"task\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": __refMap[\"#/components/schemas/TaskWithRelationsResponse\"]\n        }\n      },\n      \"GetTasksByIncidentResponse\": {\n        \"title\": \"GetTasksByIncidentResponse\",\n        \"description\": \"Response containing a list of tasks associated with an incident result.\",\n        \"required\": [\n          \"tasks\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"tasks\": {\n            \"title\": \"Tasks\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/TaskWithRelationsResponse\"],\n            \"description\": \"List of tasks linked to the incident result.\"\n          }\n        }\n      },\n      \"GetUpcomingTaskChartResponse\": {\n        \"title\": \"GetUpcomingTaskChartResponse\",\n        \"description\": \"Response containing data for visualizing upcoming tasks grouped by due date.\",\n        \"required\": [\n          \"dates\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"dates\": {\n            \"title\": \"Task Counts by Date\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"date\": {\n                  \"type\": \"string\",\n                  \"format\": \"date\",\n                  \"description\": \"Due date for the tasks.\"\n                },\n                \"task_count\": {\n                  \"type\": \"integer\",\n                  \"minimum\": 0,\n                  \"description\": \"Number of tasks due on this date.\"\n                }\n              },\n              \"required\": [\n                \"date\",\n                \"task_count\"\n              ]\n            },\n            \"description\": \"List of dates with corresponding task counts.\"\n          }\n        }\n      },\n      \"GetUserListResponse\": {\n        \"title\": \"GetUserListResponse\",\n        \"description\": \"Response containing a paginated list of users.\",\n        \"required\": [\n          \"total\",\n          \"page\",\n          \"page_size\",\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"total\": {\n            \"title\": \"Total\",\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"description\": \"Total number of users matching the query.\"\n          },\n          \"page\": {\n            \"title\": \"Page\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Current page number.\"\n          },\n          \"page_size\": {\n            \"title\": \"Page Size\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Number of users per page.\"\n          },\n          \"data\": {\n            \"title\": \"Data\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/UserResponse\"],\n            \"description\": \"List of users.\"\n          }\n        }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"description\": \"Standard error response for validation errors.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/ValidationError\"],\n            \"description\": \"List of validation errors.\"\n          }\n        }\n      },\n      \"RegisterResult\": {\n        \"title\": \"RegisterResult\",\n        \"enum\": [\n          \"compliant\",\n          \"not_compliant\",\n          \"in_progress\",\n          \"non_applicable\"\n        ],\n        \"description\": \"Result of a register check: 'compliant' for meeting requirements, 'not_compliant' for failing requirements, 'in_progress' for ongoing checks, 'non_applicable' for irrelevant checks.\"\n      },\n      \"ReportFormat\": {\n        \"title\": \"ReportFormat\",\n        \"enum\": [\n          \"xlsx\",\n          \"pdf\"\n        ],\n        \"description\": \"Format of a generated report: 'xlsx' for Excel files, 'pdf' for PDF documents.\"\n      },\n      \"RegisterResultRequest\": {\n        \"title\": \"RegisterResultRequest\",\n        \"description\": \"Request body for submitting a register result.\",\n        \"required\": [\n          \"register_id\",\n          \"result\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"register_id\": {\n            \"title\": \"Register ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the register.\"\n          },\n          \"result\": __refMap[\"#/components/schemas/RegisterResult\"]\n        }\n      },\n      \"ReportStatus\": {\n        \"title\": \"ReportStatus\",\n        \"enum\": [\n          \"generating\",\n          \"completed\",\n          \"failed\"\n        ],\n        \"description\": \"Status of a report generation process: 'generating' for in-progress, 'completed' for successful, 'failed' for errors.\"\n      },\n      \"ReportType\": {\n        \"title\": \"ReportType\",\n        \"enum\": [\n          \"task_activity_report\",\n          \"overdue_tasks_report\",\n          \"task_results_report\",\n          \"incident_report\"\n        ],\n        \"description\": \"Type of report: 'task_activity_report' for task activities, 'overdue_tasks_report' for overdue tasks, 'task_results_report' for task results, 'incident_report' for incidents.\"\n      },\n      \"SignUpUserRequest\": {\n        \"title\": \"SignUpUserRequest\",\n        \"description\": \"Request body for signing up a new user.\",\n        \"required\": [\n          \"first_name\",\n          \"last_name\",\n          \"email\",\n          \"password\",\n          \"role\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"first_name\": {\n            \"title\": \"First Name\",\n            \"maxLength\": 100,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"The user's first name.\"\n          },\n          \"last_name\": {\n            \"title\": \"Last Name\",\n            \"maxLength\": 100,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"description\": \"The user's last name.\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"The user's email address.\"\n          },\n          \"password\": {\n            \"title\": \"Password\",\n            \"maxLength\": 300,\n            \"minLength\": 8,\n            \"type\": \"string\",\n            \"format\": \"password\",\n            \"writeOnly\": true,\n            \"description\": \"The user's password.\"\n          },\n          \"role\": __refMap[\"#/components/schemas/UserRole\"],\n          \"redirect_url\": {\n            \"title\": \"Redirect URL\",\n            \"type\": \"string\",\n            \"description\": \"Optional URL to redirect the user after signup, if applicable.\"\n          }\n        }\n      },\n      \"SignUpUserResponse\": {\n        \"title\": \"SignUpUserResponse\",\n        \"description\": \"Response containing the newly signed-up user's details and session information.\",\n        \"required\": [\n          \"user\",\n          \"session\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": __refMap[\"#/components/schemas/UserResponse\"],\n          \"session\": {\n            \"title\": \"Session\",\n            \"type\": \"string\",\n            \"description\": \"Session token or identifier for the user's session.\"\n          }\n        }\n      },\n      \"TaskListWithRelationsResponse\": {\n        \"title\": \"TaskListWithRelationsResponse\",\n        \"description\": \"Represents a task in a list view with related data, including assigned users and task results, used for paginated task responses.\",\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"author_id\",\n          \"description\",\n          \"form_id\",\n          \"priority\",\n          \"is_every_employee_needs_to_complete\",\n          \"first_due_date\",\n          \"form_name\",\n          \"start_date\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the task.\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"Name or title of the task.\"\n          },\n          \"author_id\": {\n            \"title\": \"Author ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the user who created the task.\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"Detailed description of the task's purpose or requirements.\"\n          },\n          \"overdue_date\": {\n            \"title\": \"Overdue Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task becomes overdue, if applicable.\"\n          },\n          \"form_id\": {\n            \"title\": \"Form ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the form associated with the task.\"\n          },\n          \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n          \"is_every_employee_needs_to_complete\": {\n            \"title\": \"Requires All Employees\",\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the task must be completed by all employees.\"\n          },\n          \"recurrency_rule\": {\n            \"title\": \"Recurrency Rule\",\n            \"type\": \"string\",\n            \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly'), if applicable.\"\n          },\n          \"first_due_date\": {\n            \"title\": \"First Due Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Initial due date for the task.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was last updated.\"\n          },\n          \"users\": {\n            \"title\": \"Assigned Users\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/User\"],\n            \"default\": [],\n            \"description\": \"List of users assigned to the task.\"\n          },\n          \"form_name\": {\n            \"title\": \"Form Name\",\n            \"type\": \"string\",\n            \"description\": \"Name of the form associated with the task.\"\n          },\n          \"task_results\": {\n            \"title\": \"Task Results\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/TaskResultSchema\"],\n            \"default\": [],\n            \"description\": \"List of results recorded for the task.\"\n          },\n          \"start_date\": {\n            \"title\": \"Start Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task becomes active.\"\n          }\n        }\n      },\n      \"TaskPriority\": {\n        \"title\": \"TaskPriority\",\n        \"enum\": [\n          \"normal\",\n          \"high\",\n          \"critical\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"Priority level of a task: 'normal' for standard tasks, 'high' for important tasks, 'critical' for urgent tasks requiring immediate attention.\"\n      },\n      \"TaskResponse\": {\n        \"title\": \"TaskResponse\",\n        \"description\": \"Represents a task's core details, used in responses for task creation and updates.\",\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"author_id\",\n          \"description\",\n          \"form_id\",\n          \"is_every_employee_needs_to_complete\",\n          \"priority\",\n          \"first_due_date\",\n          \"created_at\",\n          \"updated_at\",\n          \"start_date\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the task.\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"Name or title of the task.\"\n          },\n          \"author_id\": {\n            \"title\": \"Author ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the user who created the task.\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"Detailed description of the task's purpose or requirements.\"\n          },\n          \"form_id\": {\n            \"title\": \"Form ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the form associated with the task.\"\n          },\n          \"is_every_employee_needs_to_complete\": {\n            \"title\": \"Requires All Employees\",\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the task must be completed by all employees.\"\n          },\n          \"recurrency_rule\": {\n            \"title\": \"Recurrency Rule\",\n            \"type\": \"string\",\n            \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly'), if applicable.\"\n          },\n          \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n          \"first_due_date\": {\n            \"title\": \"First Due Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Initial due date for the task.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was last updated.\"\n          },\n          \"start_date\": {\n            \"title\": \"Start Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task becomes active.\"\n          }\n        }\n      },\n      \"TaskResult\": {\n        \"title\": \"TaskResult\",\n        \"enum\": [\n          \"completed\",\n          \"due\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"Status of a task: 'completed' for finished tasks, 'due' for tasks pending completion.\"\n      },\n      \"TaskResultResponse\": {\n        \"title\": \"TaskResultResponse\",\n        \"description\": \"Represents the result of a task, including completion details and submitted form data.\",\n        \"required\": [\n          \"id\",\n          \"task_id\",\n          \"completed_by_user_id\",\n          \"completion_date\",\n          \"result\",\n          \"form_results\",\n          \"created_at\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the task result.\"\n          },\n          \"task_id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the associated task.\"\n          },\n          \"completed_by_user_id\": {\n            \"title\": \"Completed By User ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the user who completed the task.\"\n          },\n          \"completion_date\": {\n            \"title\": \"Completion Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was completed.\"\n          },\n          \"result\": __refMap[\"#/components/schemas/TaskResult\"],\n          \"form_results\": {\n            \"title\": \"Form Results\",\n            \"type\": \"object\",\n            \"description\": \"Data submitted for the task's associated form.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task result was created.\"\n          }\n        }\n      },\n      \"TaskResultSchema\": {\n        \"title\": \"TaskResultSchema\",\n        \"description\": \"Schema for a task result, including metadata and form data, used in task relations.\",\n        \"required\": [\n          \"id\",\n          \"task_id\",\n          \"completed_by_user_id\",\n          \"completion_date\",\n          \"result\",\n          \"form_results\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the task result.\"\n          },\n          \"task_id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the associated task.\"\n          },\n          \"completed_by_user_id\": {\n            \"title\": \"Completed By User ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the user who completed the task.\"\n          },\n          \"completion_date\": {\n            \"title\": \"Completion Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was completed.\"\n          },\n          \"result\": __refMap[\"#/components/schemas/TaskResult\"],\n          \"form_results\": {\n            \"title\": \"Form Results\",\n            \"type\": \"object\",\n            \"description\": \"Data submitted for the task's associated form.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task result was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task result was last updated.\"\n          }\n        }\n      },\n      \"TaskWithRelationsResponse\": {\n        \"title\": \"TaskWithRelationsResponse\",\n        \"description\": \"Detailed task representation with related entities like form, users, results, and notifications.\",\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"author_id\",\n          \"description\",\n          \"form_id\",\n          \"form\",\n          \"priority\",\n          \"is_every_employee_needs_to_complete\",\n          \"first_due_date\",\n          \"start_date\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the task.\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"Name or title of the task.\"\n          },\n          \"author_id\": {\n            \"title\": \"Author ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the user who created the task.\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"Detailed description of the task's purpose or requirements.\"\n          },\n          \"form_id\": {\n            \"title\": \"Form ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Identifier of the form associated with the task.\"\n          },\n          \"form\": __refMap[\"#/components/schemas/Form\"],\n          \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n          \"is_every_employee_needs_to_complete\": {\n            \"title\": \"Requires All Employees\",\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the task must be completed by all employees.\"\n          },\n          \"recurrency_rule\": {\n            \"title\": \"Recurrency Rule\",\n            \"type\": \"string\",\n            \"description\": \"Rule defining the task's recurrence pattern (e.g., 'daily', 'weekly'), if applicable.\"\n          },\n          \"overdue_date\": {\n            \"title\": \"Overdue Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task becomes overdue, if applicable.\"\n          },\n          \"first_due_date\": {\n            \"title\": \"First Due Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Initial due date for the task.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task was last updated.\"\n          },\n          \"users\": {\n            \"title\": \"Assigned Users\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/User\"],\n            \"default\": [],\n            \"description\": \"List of users assigned to the task.\"\n          },\n          \"task_results\": {\n            \"title\": \"Task Results\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/TaskResultSchema\"],\n            \"default\": [],\n            \"description\": \"List of results recorded for the task.\"\n          },\n          \"due_remainders\": {\n            \"title\": \"Due Reminders\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/DueRemainder\"],\n            \"default\": [],\n            \"description\": \"List of reminders for the task's due date.\"\n          },\n          \"overdue_subs\": {\n            \"title\": \"Overdue Subscribers\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/User\"],\n            \"default\": [],\n            \"description\": \"List of users subscribed to overdue notifications.\"\n          },\n          \"complete_subs\": {\n            \"title\": \"Completion Subscribers\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/User\"],\n            \"default\": [],\n            \"description\": \"List of users subscribed to completion notifications.\"\n          },\n          \"start_date\": {\n            \"title\": \"Start Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the task becomes active.\"\n          }\n        }\n      },\n      \"UpdateCurrentUserRequest\": {\n        \"title\": \"UpdateCurrentUserRequest\",\n        \"description\": \"Request body for updating the authenticated user's profile, such as their avatar.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"avatar\": {\n            \"title\": \"Avatar\",\n            \"type\": \"string\",\n            \"format\": \"byte\",\n            \"description\": \"Base64-encoded string representing the user's new avatar image.\"\n          }\n        }\n      },\n      \"UpdateCurrentUserResponse\": {\n        \"title\": \"UpdateCurrentUserResponse\",\n        \"description\": \"Response containing the updated details of the authenticated user.\",\n        \"required\": [\n          \"user\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": __refMap[\"#/components/schemas/UserResponse\"]\n        }\n      },\n      \"UpdateTaskRequest\": {\n        \"title\": \"UpdateTaskRequest\",\n        \"description\": \"Request body for updating an existing task's details.\",\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"Task ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier of the task to update.\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"Updated name or title of the task.\"\n          },\n          \"priority\": __refMap[\"#/components/schemas/TaskPriority\"],\n          \"first_due_date\": {\n            \"title\": \"First Due Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Updated initial due date for the task.\"\n          },\n          \"start_date\": {\n            \"title\": \"Start Date\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Updated timestamp when the task becomes active.\"\n          },\n          \"recurrency_rule\": {\n            \"title\": \"Recurrency Rule\",\n            \"type\": \"string\",\n            \"description\": \"Updated rule defining the task's recurrence pattern (e.g., 'daily', 'weekly').\"\n          },\n          \"is_every_employee_needs_to_complete\": {\n            \"title\": \"Requires All Employees\",\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"Indicates whether the task must be completed by all employees.\"\n          },\n          \"form_id\": {\n            \"title\": \"Form ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Updated identifier of the form associated with the task.\"\n          },\n          \"description\": {\n            \"title\": \"Description\",\n            \"type\": \"string\",\n            \"description\": \"Updated detailed description of the task's purpose or requirements.\"\n          },\n          \"due_remainders\": {\n            \"title\": \"Due Reminders\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/CreateDueRemainderRequest\"],\n            \"default\": [],\n            \"description\": \"Updated list of reminders for the task's due date.\"\n          },\n          \"users_overdue_subs\": {\n            \"title\": \"Overdue Subscribers\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"default\": [],\n            \"description\": \"Updated list of user IDs subscribed to overdue notifications.\"\n          },\n          \"user_ids\": {\n            \"title\": \"Assigned User IDs\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"default\": [],\n            \"description\": \"Updated list of user IDs assigned to the task.\"\n          },\n          \"users_completed_subs\": {\n            \"title\": \"Completion Subscribers\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"minimum\": 1\n            },\n            \"default\": [],\n            \"description\": \"Updated list of user IDs subscribed to completion notifications.\"\n          }\n        }\n      },\n      \"UpdateTaskResponse\": {\n        \"title\": \"UpdateTaskResponse\",\n        \"description\": \"Response containing the updated task's details.\",\n        \"required\": [\n          \"task\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": __refMap[\"#/components/schemas/TaskResponse\"]\n        }\n      },\n      \"User\": {\n        \"title\": \"User\",\n        \"description\": \"Represents a simplified user entity for use in task relations.\",\n        \"required\": [\n          \"id\",\n          \"first_name\",\n          \"last_name\",\n          \"email\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the user.\"\n          },\n          \"first_name\": {\n            \"title\": \"First Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"User's first name.\"\n          },\n          \"last_name\": {\n            \"title\": \"Last Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"User's last name.\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"User's email address.\"\n          },\n          \"avatar_url\": {\n            \"title\": \"Avatar URL\",\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"URL to the user's avatar image, if available.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was last updated.\"\n          }\n        }\n      },\n      \"UserResponse\": {\n        \"title\": \"UserResponse\",\n        \"description\": \"Detailed representation of a user, including authentication and role information.\",\n        \"required\": [\n          \"id\",\n          \"email\",\n          \"first_name\",\n          \"last_name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the user.\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"User's email address, used for login and notifications.\"\n          },\n          \"first_name\": {\n            \"title\": \"First Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"User's first name.\"\n          },\n          \"last_name\": {\n            \"title\": \"Last Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"User's last name.\"\n          },\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was last updated.\"\n          },\n          \"avatar_storage_item_id\": {\n            \"title\": \"Avatar Storage Item ID\",\n            \"type\": \"string\",\n            \"description\": \"Identifier for the user's avatar in storage, if applicable.\"\n          },\n          \"is_enabled_tfa\": {\n            \"title\": \"Two-Factor Authentication Enabled\",\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether two-factor authentication is enabled for the user.\"\n          },\n          \"avatar_url\": {\n            \"title\": \"Avatar URL\",\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"URL to the user's avatar image, if available.\"\n          },\n          \"roles\": {\n            \"title\": \"Roles\",\n            \"type\": \"array\",\n            \"items\": __refMap[\"#/components/schemas/UserRole\"],\n            \"default\": [],\n            \"description\": \"List of roles assigned to the user (e.g., admin, user).\"\n          },\n          \"keycloak_user_id\": {\n            \"title\": \"Keycloak User ID\",\n            \"type\": \"string\",\n            \"description\": \"Unique identifier for the user in the Keycloak authentication system.\"\n          }\n        }\n      },\n      \"UserRole\": {\n        \"title\": \"UserRole\",\n        \"enum\": [\n          \"admin\",\n          \"user\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"Role assigned to a user: 'admin' for users with elevated permissions, 'user' for standard users.\"\n      },\n      \"UserSchema\": {\n        \"title\": \"UserSchema\",\n        \"description\": \"Represents a user with role information, used in contexts requiring role-based access.\",\n        \"required\": [\n          \"id\",\n          \"first_name\",\n          \"last_name\",\n          \"email\",\n          \"role\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"title\": \"ID\",\n            \"type\": \"integer\",\n            \"minimum\": 1,\n            \"description\": \"Unique identifier for the user.\"\n          },\n          \"first_name\": {\n            \"title\": \"First Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"User's first name.\"\n          },\n          \"last_name\": {\n            \"title\": \"Last Name\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 100,\n            \"description\": \"User's last name.\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"User's email address.\"\n          },\n          \"role\": __refMap[\"#/components/schemas/UserRole\"],\n          \"created_at\": {\n            \"title\": \"Created At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was created.\"\n          },\n          \"updated_at\": {\n            \"title\": \"Updated At\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"description\": \"Timestamp when the user was last updated.\"\n          }\n        }\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"description\": \"Details of a validation error encountered in a request.\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"integer\"\n                }\n              ]\n            },\n            \"description\": \"Path to the field that caused the validation error.\"\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\",\n            \"description\": \"Description of the validation error.\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\",\n            \"description\": \"Type or category of the validation error.\"\n          }\n        }\n      }\n    }\n  }\n};\nexport const slugs = {\n  operations: {\"/v1/users-get-getUserList-Retrieve a Paginated List of Users\":\"retrieve-a-paginated-list-of-users\",\"/v1/users-post-signUpUser-Sign Up a New User\":\"sign-up-a-new-user\",\"/v1/users-delete-deleteUser-Delete a User\":\"delete-a-user\",\"/v1/users/avatar-delete-deleteUserAvatar-Delete Current User's Avatar\":\"delete-current-users-avatar\",\"/v1/users/add-user-post-addUser-Add a New User\":\"add-a-new-user\",\"/v1/users/current-get-getCurrentUser-Retrieve Current User Details\":\"retrieve-current-user-details\",\"/v1/users/current-patch-updateCurrentUser-Update Current User Details\":\"update-current-user-details\",\"/v1/tasks-get-getTaskList-Retrieve a Paginated List of Tasks\":\"retrieve-a-paginated-list-of-tasks\",\"/v1/tasks-post-createTask-Create a New Task\":\"create-a-new-task\",\"/v1/tasks-delete-deleteTask-Delete a Task\":\"delete-a-task\",\"/v1/tasks-patch-updateTask-Update a Task\":\"update-a-task\",\"/v1/tasks/users-post-addUsersToTask-Assign Users to a Task\":\"assign-users-to-a-task\",\"/v1/tasks/users-delete-deleteUsersFromTask-Remove Users from a Task\":\"remove-users-from-a-task\",\"/v1/tasks/upcoming-tasks-chart-get-getUpcomingTasksChart-Retrieve Upcoming Tasks Chart Data\":\"retrieve-upcoming-tasks-chart-data\",\"/v1/tasks/{id}-get-getTask-Retrieve a Task by ID\":\"retrieve-a-task-by-id\",\"/v1/tasks/by-incident-result/{incident_result_id}-get-getTasksByIncidentResult-Retrieve Tasks by Incident Result ID\":\"retrieve-tasks-by-incident-result-id\",\"/v1/tasks/result-post-createTaskResult-Create a Task Result\":\"create-a-task-result\"},\n  tags: {\"users\":\"users\",\"tasks\":\"tasks\"},\n};"],"names":["__refs","__refMap","__refMapPaths","schema","slugs"],"mappings":"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C7D,SAAY,CACV,QAAW,CACT,MAAS,CACP,MAAS,IACT,KAAQ,EACR,UAAa,GACb,KAAQ,CACN,CACE,GAAM,EACN,MAAS,uBACT,WAAc,OACd,UAAa,KACvC,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,qCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACO,EACD,KAAQ,CACN,KAAQ,CACN,OACD,EACD,QAAW,qBACX,YAAe,kJACf,YAAe,aACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,wCAAwC,CACzE,CACW,EACD,SAAY,GACZ,YAAe,+EAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,yCAAyC,CAC5E,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACO,EACD,OAAU,CACR,KAAQ,CACN,OACD,EACD,QAAW,gBACX,YAAe,6FACf,YAAe,aACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,wCAAwC,CACzE,CACW,EACD,SAAY,GACZ,YAAe,2BAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,yCAAyC,CAC5E,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,mBAAoB,CAClB,OAAU,CACR,KAAQ,CACN,OACD,EACD,QAAW,+BACX,YAAe,6EACf,YAAe,mBACf,UAAa,CACX,IAAO,CACL,YAAe,+BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,8CAA8C,CACjF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,oBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,gCACxB,CACA,CACA,CACA,CACA,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,qBAAsB,CACpB,KAAQ,CACN,KAAQ,CACN,OACD,EACD,QAAW,iBACX,YAAe,iIACf,YAAe,UACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,qCAAqC,CACtE,CACW,EACD,SAAY,GACZ,YAAe,mEAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,2BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,CACzE,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,oBAAqB,CACnB,IAAO,CACL,KAAQ,CACN,OACD,EACD,QAAW,gCACX,YAAe,0EACf,YAAe,iBACf,UAAa,CACX,IAAO,CACL,YAAe,+CACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,6CAA6C,CAChF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACO,EACD,MAAS,CACP,KAAQ,CACN,OACD,EACD,QAAW,8BACX,YAAe,2FACf,YAAe,oBACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,+CAA+C,CAChF,CACW,EACD,SAAY,GACZ,YAAe,6CAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,gDAAgD,CACnF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CA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e,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,wCAAwC,CACzE,CACW,EACD,SAAY,GACZ,YAAe,2BAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,yCAAyC,CAC5E,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACO,EACD,MAAS,CACP,KAAQ,CACN,OACD,EACD,QAAW,gBACX,YAAe,kIACf,YAAe,aACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,wCAAwC,CACzE,CACW,EACD,SAAY,GACZ,YAAe,mEAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,yCAAyC,CAC5E,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,iCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,kBAAmB,CACjB,KAAQ,CACN,KAAQ,CACN,OACD,EACD,QAAW,yBACX,YAAe,uGACf,YAAe,iBACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,4CAA4C,CAC7E,CACW,EACD,SAAY,GACZ,YAAe,yCAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,2CACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,6CAA6C,CAChF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,2BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0BACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,qCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACO,EACD,OAAU,CACR,KAAQ,CACN,OACD,EACD,QAAW,2BACX,YAAe,2GACf,YAAe,sBACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,4CAA4C,CAC7E,CACW,EACD,SAAY,GACZ,YAAe,2CAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,+CACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,6CAA6C,CAChF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,2BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0BACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,qCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,iCAAkC,CAChC,IAAO,CACL,KAAQ,CACN,OACD,EACD,QAAW,qCACX,YAAe,sJACf,YAAe,wBACf,WAAc,CACZ,CACE,SAAY,GACZ,OAAU,CACR,MAAS,YACT,KAAQ,SACR,OAAU,MACX,EACD,KAAQ,YACR,GAAM,QACN,YAAe,qDAChB,EACD,CACE,SAAY,GACZ,OAAU,CACR,MAAS,UACT,KAAQ,SACR,OAAU,MACX,EACD,KAAQ,UACR,GAAM,QACN,YAAe,mDAChB,EACD,CACE,SAAY,GACZ,OAAU,CACR,MAAS,WACT,KAAQ,SACR,QAAW,kBACZ,EACD,KAAQ,WACR,GAAM,QACN,YAAe,oEAC3B,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,oDACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,mDAAmD,EACtE,SAAY,CACV,QAAW,CACT,MAAS,CACP,MAAS,CACP,CACE,KAAQ,aACR,WAAc,CACf,EACD,CACE,KAAQ,aACR,WAAc,CACxC,CACA,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,2CACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,iBAAkB,CAChB,IAAO,CACL,KAAQ,CACN,OACD,EACD,QAAW,wBACX,YAAe,gJACf,YAAe,UACf,WAAc,CACZ,CACE,SAAY,GACZ,OAAU,CACR,MAAS,UACT,KAAQ,UACR,QAAW,CACZ,EACD,KAAQ,KACR,GAAM,OACN,YAAe,4CAC3B,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,CACzE,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,4BACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,oDAAqD,CACnD,IAAO,CACL,KAAQ,CACN,OACD,EACD,QAAW,uCACX,YAAe,uHACf,YAAe,2BACf,WAAc,CACZ,CACE,SAAY,GACZ,OAAU,CACR,MAAS,qBACT,KAAQ,UACR,QAAW,CACZ,EACD,KAAQ,qBACR,GAAM,OACN,YAAe,2CAC3B,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,wDACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,iDAAiD,CACpF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,4BACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,uCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACK,EACD,mBAAoB,CAClB,KAAQ,CACN,KAAQ,CACN,OACD,EACD,QAAW,uBACX,YAAe,+HACf,YAAe,mBACf,YAAe,CACb,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,8CAA8C,CAC/E,CACW,EACD,SAAY,GACZ,YAAe,8EAChB,EACD,UAAa,CACX,IAAO,CACL,YAAe,oCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,+CAA+C,CAClF,CACA,CACW,EACD,IAAO,CACL,YAAe,eACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,0CACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACxB,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,wCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,CAC7E,CACA,CACA,CACS,EACD,SAAY,CACV,CACE,WAAc,CAAA,CAC1B,CACA,CACA,CACA,CACG,EACD,WAAc,CACZ,QAAW,CACT,eAAkB,CAChB,MAAS,iBACT,YAAe,oDACf,SAAY,CACV,aACA,YACA,QACA,MACD,EACD,KAAQ,SACR,WAAc,CACZ,WAAc,CACZ,MAAS,aACT,UAAa,IACb,UAAa,EACb,KAAQ,SACR,YAAe,wBAChB,EACD,UAAa,CACX,MAAS,YACT,UAAa,IACb,UAAa,EACb,KAAQ,SACR,YAAe,uBAChB,EACD,MAAS,CACP,MAAS,QACT,KAAQ,SACR,OAAU,QACV,YAAe,2BAChB,EACD,KAAQA,EAAS,+BAA+B,EAChD,aAAgB,CACd,MAAS,eA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sCAAsC,EACxD,YAAe,4BAC3B,CACA,CACO,EACD,eAAkB,CAChB,MAAS,iBACT,KAAQ,CACN,YACA,gBACA,cACA,gBACD,EACD,YAAe,uLAChB,EACD,aAAgB,CACd,MAAS,eACT,KAAQ,CACN,OACA,KACD,EACD,YAAe,gFAChB,EACD,sBAAyB,CACvB,MAAS,wBACT,YAAe,iDACf,SAAY,CACV,cACA,QACD,EACD,KAAQ,SACR,WAAc,CACZ,YAAe,CACb,MAAS,cACT,KAAQ,UACR,QAAW,EACX,YAAe,6BAChB,EACD,OAAUA,EAAS,qCAAqC,CAClE,CACO,EACD,aAAgB,CACd,MAAS,eACT,KAAQ,CACN,aACA,YACA,QACD,EACD,YAAe,uHAChB,EACD,WAAc,CACZ,MAAS,aACT,KAAQ,CACN,uBACA,uBACA,sBACA,iBACD,EACD,YAAe,gLAChB,EACD,kBAAqB,CACnB,MAAS,oBACT,YAAe,0CACf,SAAY,CACV,aACA,YACA,QACA,WACA,MACD,EACD,KAAQ,SACR,WAAc,CACZ,WAAc,CACZ,MAAS,aACT,UAAa,IACb,UAAa,EACb,KAAQ,SACR,YAAe,wBAChB,EACD,UAAa,CACX,MAAS,YACT,UAAa,IACb,UAAa,EACb,KAAQ,SACR,YAAe,uBAChB,EACD,MAAS,CACP,MAAS,QACT,KAAQ,SACR,OAAU,QACV,YAAe,2BAChB,EACD,SAAY,CACV,MAAS,WACT,UAAa,IACb,UAAa,EACb,KAAQ,SACR,OAAU,WACV,UAAa,GACb,YAAe,sBAChB,EACD,KAAQA,EAAS,+BAA+B,EAChD,aAAgB,CACd,MAAS,eACT,KAAQ,SACR,YAAe,gEAC3B,CACA,CACO,EACD,mBAAsB,CACpB,MAAS,qBACT,YAAe,kFACf,SAAY,CACV,OACA,SACD,EACD,KAAQ,SACR,WAAc,CACZ,KAAQA,EAAS,mCAAmC,EACpD,QAAW,CACT,MAAS,UACT,KAAQ,SACR,YAAe,qDAC3B,CACA,CACO,EACD,8BAAiC,CAC/B,MAAS,gCACT,YAAe,oIACf,SAAY,CACV,KACA,OACA,YACA,cACA,UACA,WACA,sCACA,iBACA,YA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","x_google_ignoreList":[0]}