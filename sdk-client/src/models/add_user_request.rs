/*
 * Vestra Compliance API
 *
 * Vestra Compliance Backend REST API for managing users, tasks, and compliance-related operations. This is version 1.0; future versions may introduce breaking changes. All endpoints require authentication unless explicitly stated otherwise.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AddUserRequest : Request body for adding a new user to the system.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddUserRequest {
    /// The user's first name.
    #[serde(rename = "first_name")]
    pub first_name: String,
    /// The user's last name.
    #[serde(rename = "last_name")]
    pub last_name: String,
    /// The user's email address.
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "role")]
    pub role: models::UserRole,
    /// Optional URL to redirect the user after creation, if applicable.
    #[serde(rename = "redirect_url", skip_serializing_if = "Option::is_none")]
    pub redirect_url: Option<String>,
}

impl AddUserRequest {
    /// Request body for adding a new user to the system.
    pub fn new(first_name: String, last_name: String, email: String, role: models::UserRole) -> AddUserRequest {
        AddUserRequest {
            first_name,
            last_name,
            email,
            role,
            redirect_url: None,
        }
    }
}

