/*
 * Vestra Compliance API
 *
 * Vestra Compliance Backend REST API for managing users, tasks, and compliance-related operations. This is version 1.0; future versions may introduce breaking changes. All endpoints require authentication unless explicitly stated otherwise.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SignUpUserResponse : Response containing the newly signed-up user's details and session information.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SignUpUserResponse {
    #[serde(rename = "user")]
    pub user: Box<models::UserResponse>,
    /// Session token or identifier for the user's session.
    #[serde(rename = "session")]
    pub session: String,
}

impl SignUpUserResponse {
    /// Response containing the newly signed-up user's details and session information.
    pub fn new(user: models::UserResponse, session: String) -> SignUpUserResponse {
        SignUpUserResponse {
            user: Box::new(user),
            session,
        }
    }
}

