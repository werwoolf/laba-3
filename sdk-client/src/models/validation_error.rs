/*
 * Vestra Compliance API
 *
 * Vestra Compliance Backend REST API for managing users, tasks, and compliance-related operations. This is version 1.0; future versions may introduce breaking changes. All endpoints require authentication unless explicitly stated otherwise.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ValidationError : Details of a validation error encountered in a request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ValidationError {
    /// Path to the field that caused the validation error.
    #[serde(rename = "loc")]
    pub loc: Vec<models::LocationInner>,
    /// Description of the validation error.
    #[serde(rename = "msg")]
    pub msg: String,
    /// Type or category of the validation error.
    #[serde(rename = "type")]
    pub r#type: String,
}

impl ValidationError {
    /// Details of a validation error encountered in a request.
    pub fn new(loc: Vec<models::LocationInner>, msg: String, r#type: String) -> ValidationError {
        ValidationError {
            loc,
            msg,
            r#type,
        }
    }
}

