/*
 * Vestra Compliance API
 *
 * Vestra Compliance Backend REST API for managing users, tasks, and compliance-related operations. This is version 1.0; future versions may introduce breaking changes. All endpoints require authentication unless explicitly stated otherwise.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ReportStatus : Status of a report generation process: 'generating' for in-progress, 'completed' for successful, 'failed' for errors.
/// Status of a report generation process: 'generating' for in-progress, 'completed' for successful, 'failed' for errors.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReportStatus {
    #[serde(rename = "generating")]
    Generating,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "failed")]
    Failed,

}

impl std::fmt::Display for ReportStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Generating => write!(f, "generating"),
            Self::Completed => write!(f, "completed"),
            Self::Failed => write!(f, "failed"),
        }
    }
}

impl Default for ReportStatus {
    fn default() -> ReportStatus {
        Self::Generating
    }
}

